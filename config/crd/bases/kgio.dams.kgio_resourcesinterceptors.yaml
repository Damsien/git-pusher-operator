---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: resourcesinterceptors.kgio.dams.kgio
spec:
  group: kgio.dams.kgio
  names:
    kind: ResourcesInterceptor
    listKind: ResourcesInterceptorList
    plural: resourcesinterceptors
    singular: resourcesinterceptor
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: ResourcesInterceptor is the Schema for the resourcesinterceptors
          API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ResourcesInterceptorSpec defines the desired state of ResourcesInterceptor
            properties:
              authorizedUsers:
                items:
                  description: |-
                    ObjectReference contains enough information to let you inspect or modify the referred object.
                    ---
                    New uses of this type are discouraged because of difficulty describing its usage when embedded in APIs.
                     1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage.
                     2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular
                        restrictions like, "must refer only to types A and B" or "UID not honored" or "name must be restricted".
                        Those cannot be well described when embedded.
                     3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen.
                     4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity
                        during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple
                        and the version of the actual struct is irrelevant.
                     5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type
                        will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control.


                    Instead of using this type, create a locally provided and used type that is well-focused on your reference.
                    For example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 .
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: |-
                        If referring to a piece of an object instead of an entire object, this string
                        should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within a pod, this would take on a value like:
                        "spec.containers{name}" (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]" (container with
                        index 2 in this pod). This syntax is chosen only to have some well-defined way of
                        referencing a part of an object.
                        TODO: this design is not final and this field is subject to change in the future.
                      type: string
                    kind:
                      description: |-
                        Kind of the referent.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    name:
                      description: |-
                        Name of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                    namespace:
                      description: |-
                        Namespace of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                      type: string
                    resourceVersion:
                      description: |-
                        Specific resourceVersion to which this reference is made, if any.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                      type: string
                    uid:
                      description: |-
                        UID of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                minItems: 1
                type: array
              bypassInterceptionSubjects:
                items:
                  description: |-
                    Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference,
                    or a value for non-objects such as user and group names.
                  properties:
                    apiGroup:
                      description: |-
                        APIGroup holds the API group of the referenced subject.
                        Defaults to "" for ServiceAccount subjects.
                        Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                      type: string
                    kind:
                      description: |-
                        Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount".
                        If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                      type: string
                    name:
                      description: Name of the object being referenced.
                      type: string
                    namespace:
                      description: |-
                        Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty
                        the Authorizer should report an error.
                      type: string
                  required:
                  - kind
                  - name
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
              commitMode:
                type: string
              commitProcess:
                type: string
              defaultUnauthorizedUserMode:
                type: string
              defaultUserBind:
                description: |-
                  ObjectReference contains enough information to let you inspect or modify the referred object.
                  ---
                  New uses of this type are discouraged because of difficulty describing its usage when embedded in APIs.
                   1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage.
                   2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular
                      restrictions like, "must refer only to types A and B" or "UID not honored" or "name must be restricted".
                      Those cannot be well described when embedded.
                   3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen.
                   4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity
                      during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple
                      and the version of the actual struct is irrelevant.
                   5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type
                      will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control.


                  Instead of using this type, create a locally provided and used type that is well-focused on your reference.
                  For example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 .
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: |-
                      If referring to a piece of an object instead of an entire object, this string
                      should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within a pod, this would take on a value like:
                      "spec.containers{name}" (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]" (container with
                      index 2 in this pod). This syntax is chosen only to have some well-defined way of
                      referencing a part of an object.
                      TODO: this design is not final and this field is subject to change in the future.
                    type: string
                  kind:
                    description: |-
                      Kind of the referent.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                    type: string
                  name:
                    description: |-
                      Name of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                  namespace:
                    description: |-
                      Namespace of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                    type: string
                  resourceVersion:
                    description: |-
                      Specific resourceVersion to which this reference is made, if any.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                    type: string
                  uid:
                    description: |-
                      UID of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              excludedFields:
                items:
                  type: string
                type: array
              excludedResources:
                items:
                  properties:
                    apiGroups:
                      items:
                        type: string
                      type: array
                    apiVersions:
                      items:
                        type: string
                      type: array
                    kinds:
                      items:
                        type: string
                      type: array
                  required:
                  - apiGroups
                  - apiVersions
                  - kinds
                  type: object
                type: array
              includedResources:
                items:
                  properties:
                    apiGroups:
                      items:
                        type: string
                      type: array
                    apiVersions:
                      items:
                        type: string
                      type: array
                    kinds:
                      items:
                        type: string
                      type: array
                  required:
                  - apiGroups
                  - apiVersions
                  - kinds
                  type: object
                type: array
              operations:
                items:
                  type: string
                maxItems: 3
                minItems: 1
                type: array
              remoteRepository:
                format: uri
                type: string
            required:
            - authorizedUsers
            - commitMode
            - commitProcess
            - defaultUnauthorizedUserMode
            - operations
            - remoteRepository
            type: object
          status:
            description: ResourcesInterceptorStatus defines the observed state of
              ResourcesInterceptor
            properties:
              lastBypassedObjectState:
                properties:
                  lastBypassObject:
                    properties:
                      apiGroups:
                        description: |-
                          APIGroup contains the name, the supported versions, and the preferred version
                          of a group.
                        properties:
                          apiVersion:
                            description: |-
                              APIVersion defines the versioned schema of this representation of an object.
                              Servers should convert recognized schemas to the latest internal value, and
                              may reject unrecognized values.
                              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                            type: string
                          kind:
                            description: |-
                              Kind is a string value representing the REST resource this object represents.
                              Servers may infer this from the endpoint the client submits requests to.
                              Cannot be updated.
                              In CamelCase.
                              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                            type: string
                          name:
                            description: name is the name of the group.
                            type: string
                          preferredVersion:
                            description: |-
                              preferredVersion is the version preferred by the API server, which
                              probably is the storage version.
                            properties:
                              groupVersion:
                                description: groupVersion specifies the API group
                                  and version in the form "group/version"
                                type: string
                              version:
                                description: |-
                                  version specifies the version in the form of "version". This is to save
                                  the clients the trouble of splitting the GroupVersion.
                                type: string
                            required:
                            - groupVersion
                            - version
                            type: object
                          serverAddressByClientCIDRs:
                            description: |-
                              a map of client CIDR to server address that is serving this group.
                              This is to help clients reach servers in the most network-efficient way possible.
                              Clients can use the appropriate server address as per the CIDR that they match.
                              In case of multiple matches, clients should use the longest matching CIDR.
                              The server returns only those CIDRs that it thinks that the client can match.
                              For example: the master will return an internal IP CIDR only, if the client reaches the server using an internal IP.
                              Server looks at X-Forwarded-For header or X-Real-Ip header or request.RemoteAddr (in that order) to get the client IP.
                            items:
                              description: ServerAddressByClientCIDR helps the client
                                to determine the server address that they should use,
                                depending on the clientCIDR that they match.
                              properties:
                                clientCIDR:
                                  description: The CIDR with which clients can match
                                    their IP to figure out the server address that
                                    they should use.
                                  type: string
                                serverAddress:
                                  description: |-
                                    Address of this server, suitable for a client that matches the above CIDR.
                                    This can be a hostname, hostname:port, IP or IP:port.
                                  type: string
                              required:
                              - clientCIDR
                              - serverAddress
                              type: object
                            type: array
                          versions:
                            description: versions are the versions supported in this
                              group.
                            items:
                              description: |-
                                GroupVersion contains the "group/version" and "version" string of a version.
                                It is made a struct to keep extensibility.
                              properties:
                                groupVersion:
                                  description: groupVersion specifies the API group
                                    and version in the form "group/version"
                                  type: string
                                version:
                                  description: |-
                                    version specifies the version in the form of "version". This is to save
                                    the clients the trouble of splitting the GroupVersion.
                                  type: string
                              required:
                              - groupVersion
                              - version
                              type: object
                            type: array
                        required:
                        - name
                        - versions
                        type: object
                      apiVersions:
                        type: string
                      name:
                        type: string
                      resources:
                        type: string
                    required:
                    - apiGroups
                    - apiVersions
                    - name
                    - resources
                    type: object
                  lastBypassObjectSubject:
                    description: |-
                      Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference,
                      or a value for non-objects such as user and group names.
                    properties:
                      apiGroup:
                        description: |-
                          APIGroup holds the API group of the referenced subject.
                          Defaults to "" for ServiceAccount subjects.
                          Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                        type: string
                      kind:
                        description: |-
                          Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount".
                          If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                        type: string
                      name:
                        description: Name of the object being referenced.
                        type: string
                      namespace:
                        description: |-
                          Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty
                          the Authorizer should report an error.
                        type: string
                    required:
                    - kind
                    - name
                    type: object
                    x-kubernetes-map-type: atomic
                  lastBypassObjectTime:
                    format: date-time
                    type: string
                type: object
              lastInterceptedObjectState:
                properties:
                  lastInterceptedObject:
                    properties:
                      apiGroups:
                        description: |-
                          APIGroup contains the name, the supported versions, and the preferred version
                          of a group.
                        properties:
                          apiVersion:
                            description: |-
                              APIVersion defines the versioned schema of this representation of an object.
                              Servers should convert recognized schemas to the latest internal value, and
                              may reject unrecognized values.
                              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                            type: string
                          kind:
                            description: |-
                              Kind is a string value representing the REST resource this object represents.
                              Servers may infer this from the endpoint the client submits requests to.
                              Cannot be updated.
                              In CamelCase.
                              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                            type: string
                          name:
                            description: name is the name of the group.
                            type: string
                          preferredVersion:
                            description: |-
                              preferredVersion is the version preferred by the API server, which
                              probably is the storage version.
                            properties:
                              groupVersion:
                                description: groupVersion specifies the API group
                                  and version in the form "group/version"
                                type: string
                              version:
                                description: |-
                                  version specifies the version in the form of "version". This is to save
                                  the clients the trouble of splitting the GroupVersion.
                                type: string
                            required:
                            - groupVersion
                            - version
                            type: object
                          serverAddressByClientCIDRs:
                            description: |-
                              a map of client CIDR to server address that is serving this group.
                              This is to help clients reach servers in the most network-efficient way possible.
                              Clients can use the appropriate server address as per the CIDR that they match.
                              In case of multiple matches, clients should use the longest matching CIDR.
                              The server returns only those CIDRs that it thinks that the client can match.
                              For example: the master will return an internal IP CIDR only, if the client reaches the server using an internal IP.
                              Server looks at X-Forwarded-For header or X-Real-Ip header or request.RemoteAddr (in that order) to get the client IP.
                            items:
                              description: ServerAddressByClientCIDR helps the client
                                to determine the server address that they should use,
                                depending on the clientCIDR that they match.
                              properties:
                                clientCIDR:
                                  description: The CIDR with which clients can match
                                    their IP to figure out the server address that
                                    they should use.
                                  type: string
                                serverAddress:
                                  description: |-
                                    Address of this server, suitable for a client that matches the above CIDR.
                                    This can be a hostname, hostname:port, IP or IP:port.
                                  type: string
                              required:
                              - clientCIDR
                              - serverAddress
                              type: object
                            type: array
                          versions:
                            description: versions are the versions supported in this
                              group.
                            items:
                              description: |-
                                GroupVersion contains the "group/version" and "version" string of a version.
                                It is made a struct to keep extensibility.
                              properties:
                                groupVersion:
                                  description: groupVersion specifies the API group
                                    and version in the form "group/version"
                                  type: string
                                version:
                                  description: |-
                                    version specifies the version in the form of "version". This is to save
                                    the clients the trouble of splitting the GroupVersion.
                                  type: string
                              required:
                              - groupVersion
                              - version
                              type: object
                            type: array
                        required:
                        - name
                        - versions
                        type: object
                      apiVersions:
                        type: string
                      name:
                        type: string
                      resources:
                        type: string
                    required:
                    - apiGroups
                    - apiVersions
                    - name
                    - resources
                    type: object
                  lastInterceptedObjectKubernetesUser:
                    description: |-
                      Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference,
                      or a value for non-objects such as user and group names.
                    properties:
                      apiGroup:
                        description: |-
                          APIGroup holds the API group of the referenced subject.
                          Defaults to "" for ServiceAccount subjects.
                          Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                        type: string
                      kind:
                        description: |-
                          Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount".
                          If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                        type: string
                      name:
                        description: Name of the object being referenced.
                        type: string
                      namespace:
                        description: |-
                          Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty
                          the Authorizer should report an error.
                        type: string
                    required:
                    - kind
                    - name
                    type: object
                    x-kubernetes-map-type: atomic
                  lastInterceptedObjectTime:
                    format: date-time
                    type: string
                type: object
              lastPushedObjectState:
                properties:
                  lastPushedGitUserID:
                    type: string
                  lastPushedObject:
                    properties:
                      apiGroups:
                        description: |-
                          APIGroup contains the name, the supported versions, and the preferred version
                          of a group.
                        properties:
                          apiVersion:
                            description: |-
                              APIVersion defines the versioned schema of this representation of an object.
                              Servers should convert recognized schemas to the latest internal value, and
                              may reject unrecognized values.
                              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                            type: string
                          kind:
                            description: |-
                              Kind is a string value representing the REST resource this object represents.
                              Servers may infer this from the endpoint the client submits requests to.
                              Cannot be updated.
                              In CamelCase.
                              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                            type: string
                          name:
                            description: name is the name of the group.
                            type: string
                          preferredVersion:
                            description: |-
                              preferredVersion is the version preferred by the API server, which
                              probably is the storage version.
                            properties:
                              groupVersion:
                                description: groupVersion specifies the API group
                                  and version in the form "group/version"
                                type: string
                              version:
                                description: |-
                                  version specifies the version in the form of "version". This is to save
                                  the clients the trouble of splitting the GroupVersion.
                                type: string
                            required:
                            - groupVersion
                            - version
                            type: object
                          serverAddressByClientCIDRs:
                            description: |-
                              a map of client CIDR to server address that is serving this group.
                              This is to help clients reach servers in the most network-efficient way possible.
                              Clients can use the appropriate server address as per the CIDR that they match.
                              In case of multiple matches, clients should use the longest matching CIDR.
                              The server returns only those CIDRs that it thinks that the client can match.
                              For example: the master will return an internal IP CIDR only, if the client reaches the server using an internal IP.
                              Server looks at X-Forwarded-For header or X-Real-Ip header or request.RemoteAddr (in that order) to get the client IP.
                            items:
                              description: ServerAddressByClientCIDR helps the client
                                to determine the server address that they should use,
                                depending on the clientCIDR that they match.
                              properties:
                                clientCIDR:
                                  description: The CIDR with which clients can match
                                    their IP to figure out the server address that
                                    they should use.
                                  type: string
                                serverAddress:
                                  description: |-
                                    Address of this server, suitable for a client that matches the above CIDR.
                                    This can be a hostname, hostname:port, IP or IP:port.
                                  type: string
                              required:
                              - clientCIDR
                              - serverAddress
                              type: object
                            type: array
                          versions:
                            description: versions are the versions supported in this
                              group.
                            items:
                              description: |-
                                GroupVersion contains the "group/version" and "version" string of a version.
                                It is made a struct to keep extensibility.
                              properties:
                                groupVersion:
                                  description: groupVersion specifies the API group
                                    and version in the form "group/version"
                                  type: string
                                version:
                                  description: |-
                                    version specifies the version in the form of "version". This is to save
                                    the clients the trouble of splitting the GroupVersion.
                                  type: string
                              required:
                              - groupVersion
                              - version
                              type: object
                            type: array
                        required:
                        - name
                        - versions
                        type: object
                      apiVersions:
                        type: string
                      name:
                        type: string
                      resources:
                        type: string
                    required:
                    - apiGroups
                    - apiVersions
                    - name
                    - resources
                    type: object
                  lastPushedObjectGitPath:
                    type: string
                  lastPushedObjectState:
                    type: string
                  lastPushedObjectTime:
                    format: date-time
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
